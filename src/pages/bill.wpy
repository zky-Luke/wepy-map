<template>
  <view class="bill">
    <view class="top">
      <image src="../images/bg2.png" mode="aspectFit"/>
      <view class="money">
        <text class="number">{{(bill / 100) || 0}}</text>
        <text class="unit">元</text>
      </view>
      <text class="text">待支付</text>
    </view>
    <view class="wepay" @tap="payHandle(1)">
      <image src="../images/wechat.png" mode="aspectFit"/>
      <text class="text">微信支付</text>
      <view class="icon">
        <icon wx:if="{{active===1}}" type="success" size="40rpx" color="#0ABA07" />
      </view>
    </view>
    <view class="wepay" @tap="payHandle(2)">
      <image src="../images/rmb.png" mode="aspectFit"/>
      <text class="text">余额支付</text>
      <view class="icon">
        <icon wx:if="{{active===2}}" type="success" size="40rpx" color="#0ABA07" />
      </view>
    </view>
    <view class="button" @tap="depositHandle">确认支付</view>
    <view class="password" wx:if="{{pwdShow}}">
      <view class="warp">
        <view class="text">解锁码</view>
        <view class="pwd">
          <view class="li" wx:for="{{password}}" wx:key="item">{{item}}</view>
        </view>
        <view class="list">
          <view class="li" @tap="itemHandle({{1}})">我知道了</view>
          <view class="li" @tap="itemHandle({{2}})">重新获取</view>
        </view>
      </view>
      <view class="tip">温馨提示：在规定套餐时间内可以重新获取密码；如重新获取密码超过3次请提交异常申请，客户会为您服务</view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { WePay } from '@/utils/wepay.js'
import api from '@/api/api'
import tip from '@/utils/tip.js'
import { ROUTER_BACK } from '../utils/constant.js'

export default class Bill extends wepy.page {
  config = {
    navigationBarTitleText: '账单'
  }
  data = {
    bill: 0,    // 金额
    no: '',     // 订单号
    page: '',
    active: 1,
    password: [0, 0, 0, 0, 0, 0],
    pwdShow: false
  }
  async onLoad(options) {
    console.log(options)
    this.bill = options.fee
    this.no = options.no
    this.page = options.page
    // 已有订单
    if (options.password) {
      this.password = options.password
      this.pwdShow = true
      this.$apply()
    }
  }
  methods = {
    payHandle(num) {
      this.active = parseInt(num)
    },
    async depositHandle() {
      if (this.bill !== 0) {
        switch (this.active) {
          // 微信支付
          case 1:
            if (this.page === 'packageMeal') {
              WePay({
                order: {
                  body: '充电线支付',
                  fee_type: 'CNY',
                  total_fee: this.bill,
                  out_trade_no: this.no
                },
                success: async (res) => {
                  // 取消未付款单
                  wepy.setStorageSync(ROUTER_BACK, '')
                  let response1 = await wepy.showModal({
                    title: '提示',
                    content: '支付成功',
                    showCancel: false
                  })
                  if (response1.confirm) {
                    // 线充套餐界面
                    // 获取充电线密码
                    let response2 = await api.getPwd({
                      query: {
                        no: this.no
                      }
                    })
                    if (response2.data.status === 200) {
                      let password = response2.data.data.pwd
                      this.password = password.split('')
                      this.pwdShow = true
                      this.$apply()
                    } else {
                      console.log(response2)
                      tip.showModal('提示', response2.data.data.errmsg)
                    }
                  }
                }
              })
            } else {
              WePay({
                fee: this.bill,
                type: 1,
                success: async (res) => {
                  // 取消未付款单
                  wepy.setStorageSync(ROUTER_BACK, '')
                  let response1 = await wepy.showModal({
                    title: '提示',
                    content: '支付成功',
                    showCancel: false
                  })
                  if (response1.confirm) {
                    wepy.reLaunch({
                      url: '/pages/home'
                    })
                  }
                }
              })
            }
            break
          case 2:
            // 余额支付
            let res = await api.BalancePaymentOrder({
              query: {
                no: this.no
              }
            })
            if (res.data.status === 200) {
              // 取消未付款单
              wepy.setStorageSync(ROUTER_BACK, '')
              if (res.data.data.need_pay_fee === 0) {
                if (this.page === 'packageMeal') {
                  // 线充套餐界面
                  // 获取充电线密码
                  let response2 = await api.getPwd({
                    query: {
                      no: this.no
                    }
                  })
                  if (response2.data.status === 200) {
                    console.log('55555')
                    let password = response2.data.data.pwd
                    this.password = password.split('')
                    this.pwdShow = true
                    this.$apply()
                  } else {
                    console.log(response2)
                    tip.showModal('提示', response2.data.data.errmsg)
                  }
                } else {
                  let response3 = await wepy.showModal({
                    title: '提示',
                    content: '支付成功',
                    showCancel: false
                  })
                  if (response3.confirm) {
                    wepy.reLaunch({
                      url: '/pages/home'
                    })
                  }
                }
              } else {
                tip.showModal('提示', `还需支付${res.data.data.need_pay_fee / 100}元`)
              }
            } else {
              if (res.data.data.errcode === '20305') {
                let response4 = await wepy.showModal({
                  title: '提示',
                  content: res.data.data.errmsg,
                  confirmText: '去充值',
                  showCancel: false
                })
                if (response4.confirm) {
                  wepy.navigateTo({
                    url: '/pages/wallet'
                  })
                }
              } else {
                tip.showModal('提示', res.data.data.errmsg)
              }
            }
            break
        }
      }
    },
    // 我知道了、重新获取按钮
    async itemHandle (num) {
      switch (num) {
        case 1:
          wepy.reLaunch({
            url: '/pages/home'
          })
          break
        case 2:
          // 获取充电线密码
          let response3 = await api.getPwd({
            query: {
              no: this.no
            }
          })
          if (response3.data.status === 200) {
            let password = response3.data.data.pwd
            this.password = password.split('')
            this.$apply()
          } else {
            tip.showModal('提示', response3.data.data.errmsg)
          }
          break
      }
    }
  }
}
</script>

<style lang="less">
@import '../styles/mixin.less';
.bill{
  .wh(100%, 100%);
  padding-top: 4%;
  background-color: #F7F7F7;
  position: relative;
  box-sizing: border-box;
  .top{
    .wh(700rpx, 300rpx);
    margin: 0 auto 30rpx auto;
    position: relative;
    image{
      .wh(100%, 100%);
    }
    .money{
      position: absolute;
      left: 50%;
      top: 22%;
      transform: translateX(-50%);
      .number{
        font-size: 66rpx;
        margin-right: 20rpx;
      }
      .unit{
        font-size: 30rpx;
      }
    }
    .text{
      position: absolute;
      left: 50%;
      top: 58%;
      transform: translateX(-50%);
      color: #AAAAAA;
    }
  }
  .wepay{
    .wh(100%, 80rpx);
    background-color: #fff;
    padding: 0 40rpx;
    display: flex;
    align-items: center;
    position: relative;
    box-sizing: border-box;
    image{
      .wh(50rpx, 50rpx);
      margin-right: 20rpx;
    }
    .text{
      font-size: 32rpx;
    }
    .icon{
      .wh(30rpx, 30rpx);
      border-radius: 50%;
      border: 1rpx solid #7a7a7a;
      position: absolute;
      top: 50%;
      right: 40rpx;
      transform: translateY(-50%);
      icon{
        .f-center;
      }
    }
  }
  .button{
    .wh-l(90%, 100rpx);
    background: #F5D822;
    border-radius: 10rpx;
    position: absolute;
    left: 50%;
    bottom: 7%;
    transform: translateX(-50%);
    text-align: center;
  }
  .password{
    .fs;
    background-color: rgba(0, 0, 0, .8);
    .warp{
      .wh(100%, auto);
      margin-top: 240rpx;
      color: #FFF;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      .text{
        font-size: 38rpx;
      }
      .pwd{
        .wh(680rpx, 180rpx);
        background-color: #fff;
        margin: 60rpx 0rpx 80rpx 0rpx;
        padding: 0 20rpx;
        box-sizing: border-box;
        display: flex;
        justify-content: space-around;
        align-items: center;
        .li{
          .wh-l(90rpx, 120rpx);
          background-color: #f4c300;
          border-radius: 10rpx;
          font-size: 100rpx;
          color: #0f0f0f;
          text-align: center;
        }
      }
      .list{
        .wh-l(500rpx, auto);
        margin: 0 auto;
        display: flex;
        justify-content: center;
        .li{
          .wh-l(200rpx, 80rpx);
          font-size: 34rpx;
          border: 1rpx solid #fff;
          border-radius: 10rpx;
          margin: 0 auto;
          text-align: center;
        }
      }
    }
    .tip{
      .wh(620rpx, auto);
      font-size: 24rpx;
      position: absolute;
      left: 50%;
      bottom: 8.5%;
      transform: translateX(-50%);
      color: #FFF;
      text-align: center;
    }
  }
}
</style>
