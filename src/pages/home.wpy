<template>
  <view class="container">
    <view class="Map">
      <map
        id="myMap"
        latitude="{{latitude}}"
        longitude="{{longitude}}"
        markers="{{markers}}"
        scale="{{scale}}"
        show-location
        bindregionchange="regionchange"
        bindmarkertap="markertap"
        bindtap="maptap"
      >
        <cover-view class="header">
          <cover-view class="left" @tap="goToUser">
            <cover-view class="avatar">
              <cover-image src="{{avatar}}"/>
            </cover-view>
            <cover-view class="bar"></cover-view>
          </cover-view>
          <cover-view class="center" @tap="search">搜索位置查找附近充电宝</cover-view>
          <cover-view class="right" @tap="goToStoreList">
            <cover-image src="../images/seach@3x.png"/>
            <cover-view class="bar"></cover-view>
          </cover-view>
        </cover-view>
        <cover-image class="cover-img" src="../images/landmark.png"/>
        <cover-image class="reporting" @tap="reportHandle" src="../images/reporting.png"/>
        <cover-image class="location" @tap="moveToLocation" src="../images/restoration.png"/>
        <cover-image class="scanning" @tap="scanningHandle" src="../images/scanning.png"/>
        <cover-image class="service"
                     @tap="serviceAlert('1')"
                     src="../images/service.png"/>
        <cover-view class="service-mask"
                    wx:if="{{serviceMask}}"
                    @tap="serviceAlert('0')">
          <cover-view class="alert">
            <!-- <cover-view class="item"
                        wx:for="{{serviceData}}"
                        wx:key="{{index}}"
                        @tap="itemHandle({{index}})">
              {{item.text}}
              <cover-view class="line" wx:if="{{index !== 2}}"></cover-view>
            </cover-view> -->
            <cover-view class="item"
                        @tap="itemHandle(0)">
              拨打客服电话
              <cover-view class="line"></cover-view>
            </cover-view>
            <cover-view class="item"
                        @tap="itemHandle(1)">
              常见问题
              <cover-view class="line"></cover-view>
            </cover-view>
            <cover-view class="item"
                        @tap="itemHandle(2)">
              使用方法
            </cover-view>
          </cover-view>
        </cover-view>
        <!-- 店铺详情 -->
        <storeDetails class="details"
                      wx:if="{{storeShow}}"
                      :detailData.sync="detailData">
        </storeDetails>
      </map>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { USER_INFO } from '../utils/constant.js'
import { connect, getStore } from 'wepy-redux'
// import api from '@/api/api'
import tip from '@/utils/tip.js'
import storeDetails from '../components/store_details'

const store = getStore()
@connect({
  mapCtx(state) {
    return state.map.mapCtx
  },
  location(state) {
    return state.counter.location
  },
  params(state) {
    return state.counter.params
  }
})
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '充电桩'
  };
  data = {
    page: '',
    serviceData: [{
      text: '拨打客服电话'
    }, {
      text: '常见问题'
    }, {
      text: '使用方法'
    }],
    scale: 15,
    serviceMask: false,
    // 116.397428, 39.90923
    latitude: 23.099994,
    longitude: 113.32452,
    locationData: { // 地图中心点
      latitude: 0,
      longitude: 0
    },
    markers: [
      // {
      //   id: 1,
      //   latitude: 23.099994,
      //   longitude: 113.32452,
      //   name: 'T.I.T 创意园',
      //   iconPath: '../images/charger.png',
      //   width: 34.87,
      //   height: 38
      // }
    ],
    avatar: '', // 头像
    storeShow: false,   // 店铺详情显示
    detailData: {}     // 点击店铺详情
  }
  components = {
    storeDetails: storeDetails
  }
  async onShow() {}
  async onLoad(options) {
    let userInfo = wepy.getStorageSync(USER_INFO)
    this.avatar = userInfo.avatarUrl
    this._mapInit()
    // 下单请求示例
    // let response = await api.cancleOrder({
    //   query: {
    //     no: back
    //   }
    // })
    // if (response.data.status === 200) {
    //   console.log('cancleOrder')
    // } else {
    //   tip.showModal('提示', response.data.data.errmsg)
    // }
  }
  methods = {
    // 故障上报
    reportHandle () {},
    // 当前位置
    moveToLocation() {
      this.mapCtx.moveToLocation()
    },
    // 扫码
    async scanningHandle() {
      wx.scanCode({
        async success (res) {
          tip.showModal('提示', res.result)
        }
      })
    },
    // 客服
    serviceAlert(type) {
      switch (type) {
        case '0':
          this.serviceMask = false
          break
        case '1':
          this.serviceMask = true
          break
      }
    },
    itemHandle(i) {},
    // 我的
    goToUser () {},
    // 搜索附近
    search () {
      wx.chooseLocation({
        success: res => {
          console.log(res)
          this.latitude = res.latitude
          this.longitude = res.longitude
          this.$apply()
        },
        fail (res) {
          console.log(res)
        }
      })
    },
    // 拖拽选址
    async regionchange(e) {
      // console.log(e)
      if (e.type === 'end') {
        // 获取地图中心位置
        this.mapCtx.getCenterLocation({
          success: res => {
            this.locationData.latitude = res.latitude
            this.locationData.longitude = res.longitude
          }
        })
        console.log(this.locationData.latitude)
        console.log(this.locationData.longitude)
        if (this.locationData.longitude !== 0 && this.locationData.longitude !== 0) {}
      }
    },
    // 点击标记点
    async markertap(e) {},
    // 点击地图
    maptap(e) {}
  }
  // 初始化地图
  async _mapInit() {
    let mapCtx = await wepy.createMapContext('myMap')
    store.dispatch({
      type: 'ASSIGNMENT_MAP_CTX',
      payload: mapCtx
    })
    this.mapCtx.moveToLocation()
    wx.getLocation({
      success: res => {
        // console.log(res)
        this.locationData.latitude = res.latitude
        this.locationData.longitude = res.longitude
        this.$apply()
        // console.log(this.markers)
      },
      fail: res => {
        console.log(res)
      }
    })
  }
}
</script>

<style lang="less">
@import '../styles/mixin.less';
@header: 86rpx;
.container {
  .wh(100%, 100%);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  position: relative;
  .Map {
    .wh(100%, 100%);
    position: relative;
    map {
      .wh(100%, 100%);
      @header: 86rpx;
      .header {
        display: flex;
        .wh-l(100%, @header);
        background-color: #fff;
        position: absolute;
        left: 0;
        top: 0;
        z-index: 1;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);
        .left {
          flex-grow: 2;
          width: 0;
          display: flex;
          justify-content: center;
          align-items: center;
          position: relative;
          .avatar {
            .wh(60rpx, 60rpx);
            overflow: hidden;
            display: block;
            border-radius: 50%;
            position: relative;
            box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);
            cover-image {
              .wh(100%, 100%);
            }
          }
          .bar {
            .wh(3rpx, 46rpx);
            background: #d8d8d8;
            position: absolute;
            top: 50%;
            right: 0;
            margin-top: -23rpx;
          }
        }
        .center {
          flex-grow: 12;
          width: 0;
          font-size: 32rpx;
          padding-left: 5%;
          white-space: 5px;
          line-height: @header;
        }
        .right {
          flex-grow: 2;
          width: 0;
          display: flex;
          justify-content: center;
          align-items: center;
          position: relative;
          cover-image {
            .wh(47.03rpx, 34rpx);
          }
          .bar {
            .wh(3rpx, 46rpx);
            background: #d8d8d8;
            position: absolute;
            top: 50%;
            left: 0;
            margin-top: -23rpx;
          }
        }
      }
      .cover-img {
        .wh(35.42rpx, 80rpx);
        .f-center;
        margin-top: -34rpx;
      }
      .reporting{
        .wh(90rpx, 90rpx);
        position: absolute;
        left: 36rpx;
        bottom: 150rpx;
      }
      .location {
        .wh(100rpx, 100rpx);
        position: absolute;
        left: 32rpx;
        bottom: 36rpx;
      }
      .scanning {
        .wh(200rpx, 200rpx);
        position: absolute;
        left: 50%;
        bottom: 40rpx;
        transform: translateX(-50%);
      }
      .service {
        .wh(100rpx, 100rpx);
        position: absolute;
        right: 32rpx;
        bottom: 36rpx;
      }
      .service-mask {
        .fs;
        z-index: 999;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(0, 0, 0, 0.5);
        @alertHeight: 300rpx;
        .alert{
          .wh(500rpx, @alertHeight);
          background: #FFF;
          margin-top: -100rpx;
          border-radius: 14rpx;
          display: flex;
          flex-direction: column;
          font-size: 34rpx;
          .item{
            // .wh(100%, @alertHeight / 3)
            line-height: @alertHeight / 3;
            flex-grow: 1;
            padding-left: 30rpx;
            position: relative;
            .line {
              .wh(100%, 3rpx);
              background: #DEDEDE;
              position: absolute;
              left: 0;
              bottom: 0;
            }
          }
        }
      }
      .details{
        position: absolute;
        left: 50%;
        bottom: 30rpx;
        transform: translateX(-50%);
      }
    }
  }
}
</style>
