<template>
  <view class="container">
    <view class="Map">
      <map
        id="myMap"
        latitude="{{latitude}}"
        longitude="{{longitude}}"
        markers="{{markers}}"
        scale="{{scale}}"
        show-location
        bindregionchange="regionchange"
        bindmarkertap="markertap"
        bindtap="maptap"
      >
        <cover-view class="header">
          <cover-view class="left" @tap="goToUser">
            <cover-view class="avatar">
              <cover-image src="{{avatar}}"/>
            </cover-view>
            <cover-view class="bar"></cover-view>
          </cover-view>
          <cover-view class="center" @tap="search">搜索位置查找附近充电宝</cover-view>
          <cover-view class="right" @tap="goToStoreList">
            <cover-image src="../images/seach@3x.png"/>
            <cover-view class="bar"></cover-view>
          </cover-view>
        </cover-view>
        <cover-image class="cover-img" src="../images/landmark.png"/>
        <cover-image class="reporting" @tap="reportHandle" src="../images/reporting.png"/>
        <cover-image class="location" @tap="moveToLocation" src="../images/restoration.png"/>
        <cover-image class="scanning" @tap="scanningHandle" src="../images/scanning.png"/>
        <cover-image class="service"
                     @tap="serviceAlert('1')"
                     src="../images/service.png"/>
        <cover-view class="service-mask"
                    wx:if="{{serviceMask}}"
                    @tap="serviceAlert('0')">
          <cover-view class="alert">
            <!-- <cover-view class="item"
                        wx:for="{{serviceData}}"
                        wx:key="{{index}}"
                        @tap="itemHandle({{index}})">
              {{item.text}}
              <cover-view class="line" wx:if="{{index !== 2}}"></cover-view>
            </cover-view> -->
            <cover-view class="item"
                        @tap="itemHandle(0)">
              拨打客服电话
              <cover-view class="line"></cover-view>
            </cover-view>
            <cover-view class="item"
                        @tap="itemHandle(1)">
              常见问题
              <cover-view class="line"></cover-view>
            </cover-view>
            <cover-view class="item"
                        @tap="itemHandle(2)">
              使用方法
            </cover-view>
          </cover-view>
        </cover-view>
        <!-- 店铺详情 -->
        <storeDetails class="details"
                      wx:if="{{storeShow}}"
                      :detailData.sync="detailData">
        </storeDetails>
      </map>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { USER_INFO, USER_SPECICAL_INFO } from '../utils/constant.js'
import { connect, getStore } from 'wepy-redux'
import api from '@/api/api'
import tip from '@/utils/tip.js'
import storeDetails from '../components/store_details'

const store = getStore()
@connect({
  mapCtx(state) {
    return state.map.mapCtx
  },
  location(state) {
    return state.counter.location
  }
})
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: '海博充电'
  };
  data = {
    serviceData: [{
      text: '拨打客服电话'
    }, {
      text: '常见问题'
    }, {
      text: '使用方法'
    }],
    scale: 15,
    serviceMask: false,
    // 116.397428, 39.90923
    latitude: 23.099994,
    longitude: 113.32452,
    locationData: { // 地图中心点
      latitude: 0,
      longitude: 0
    },
    markers: [
      // {
      //   id: 1,
      //   latitude: 23.099994,
      //   longitude: 113.32452,
      //   name: 'T.I.T 创意园',
      //   iconPath: '../images/charger.png',
      //   width: 34.87,
      //   height: 38
      // }
    ],
    avatar: '', // 头像
    storeShow: false,   // 店铺详情显示
    detailData: {}     // 点击店铺详情
  }
  components = {
    storeDetails: storeDetails
  }
  async onLoad() {
    let userInfo = wepy.getStorageSync(USER_INFO)
    this.avatar = userInfo.avatarUrl
    this._mapInit()
    this.hasUnpaidOrder()
  }
  methods = {
    // 故障上报
    reportHandle () {
      wepy.navigateTo({
        url: '/pages/faultReporting'
      })
    },
    // 当前位置
    moveToLocation() {
      this.mapCtx.moveToLocation()
    },
    // 扫码
    async scanningHandle() {
      wx.scanCode({
        async success (res) {
          console.log(res)
          let arr = res.result.split('/')
          let imei = arr[arr.length - 1]
          let user = wepy.getStorageSync(USER_SPECICAL_INFO)
          console.log('user')
          console.log(user)
          // 查询设备类型
          let response1 = await api.queryDeviceType({
            query: {
              imei: imei
            },
            disableLoad: true
          })
          let deviceType
          if (response1.data.status === 200) {
            deviceType = response1.data.data.type
          } else {
            tip.showModal('提示', response1.data.data.errmsg)
          }

          if (deviceType === 'PB') {
            // 充电宝类型
            // 查询用户是否存在借出单
            let response2 = await api.UserHasLend({
              query: {
                userId: user.userid
              },
              disableLoad: true
            })
            let lendType
            if (response2.data.status === 200) {
              lendType = response2.data.data.type
            } else {
              tip.showModal('提示', response2.data.data.errmsg)
            }

            // 借还充电宝
            let response3
            if (lendType === 'RETURN') {
              response3 = await api.LendPortableBattery({
                query: {
                  nmsUserId: user.userid,
                  imei: imei
                },
                loadText: '请放入充电宝...'
              })
            } else {
              response3 = await api.LendPortableBattery({
                query: {
                  nmsUserId: user.userid,
                  imei: imei
                },
                loadText: '弹出后需取出...'
              })
            }
            console.log(response3)
            if (response3.data.status === 200) {
              if (response3.data.type === 'RETURN') {
                wepy.navigateTo({
                  url: '/pages/order'
                })
              } else {
                tip.showModal('提示', '借出成功')
              }
            } else {
              let modal = await wepy.showModal({
                title: '提示',
                content: response3.data.data.errmsg,
                showCancel: false
              })
              if (modal.confirm) {
                if (response3.data.data.errcode === '20303') {
                  wepy.navigateTo({
                    url: '/pages/order'
                  })
                }
              }
            }
          } else if (deviceType === 'PL') {
            // 线充类型
            // 查询充电线计费详情
            let response4 = await api.chargingCableBill({
              query: {}
            })
            if (response4.data.status === 200) {
              let mealList = response4.data.data
              wepy.navigateTo({
                url: '/pages/packageMeal?mealList=' + JSON.stringify(mealList) + '&imei=' + imei
              })
            } else {
              tip.showModal('提示', response4.data.data.errmsg)
            }
          }
        },
        fail (res) {
          console.log(res)
          // tip.showModal('扫码结果', res.errMsg)
        }
      })
    },
    // 客服
    serviceAlert(type) {
      switch (type) {
        case '0':
          this.serviceMask = false
          break
        case '1':
          this.serviceMask = true
          break
      }
    },
    itemHandle(i) {
      console.log(i)
      i = parseInt(i)
      switch (i) {
        case 0:
          wx.makePhoneCall({
            phoneNumber: '400-628-1388'
          })
          break
        case 1:
          wepy.navigateTo({
            url: '/pages/commonProblem'
          })
          break
        case 2:
          wepy.navigateTo({
            url: '/pages/useMethod'
          })
          break
      }
    },
    // 我的
    goToUser () {
      wepy.navigateTo({
        url: '/pages/user'
      })
    },
    // 搜索附近
    search () {
      wx.chooseLocation({
        success: res => {
          console.log(res)
          this.latitude = res.latitude
          this.longitude = res.longitude
          this.$apply()
        },
        fail (res) {
          console.log(res)
        }
      })
    },
    // 商家列表
    goToStoreList () {
      wepy.navigateTo({
        url: '/pages/storeList?lat=' + this.latitude + '&lng=' + this.longitude
      })
    },
    // 拖拽选址
    async regionchange(e) {
      // console.log(e)
      if (e.type === 'end') {
        // 获取地图中心位置
        this.mapCtx.getCenterLocation({
          success: res => {
            this.locationData.latitude = res.latitude
            this.locationData.longitude = res.longitude
          }
        })
        console.log(this.locationData.latitude)
        console.log(this.locationData.longitude)
        if (this.locationData.longitude !== 0 && this.locationData.longitude !== 0) {
          this.nearbyStore()
        }
      }
    },
    // 点击标记点
    async markertap(e) {
      // 商铺位置
      this.markers.map(i => {
        if (i.id === e.markerId) {
          store.dispatch({
            type: 'STORE_LOCATION',
            payload: {
              lat: i.latitude,
              lng: i.longitude
            }
          })
        }
      })
      console.log(e)
      // 商铺详情
      let res = await api.MerchatDetails({
        query: {
          merchantId: e.markerId,
          lng: this.location.lng,
          lat: this.location.lat
        }
      })
      console.log(res)
      if (res.data.status === 200) {
        this.detailData = res.data.data
        this.storeShow = true
        this.$apply()
      } else {
        tip.showModal('提示', res.data.data.errmsg)
      }
    },
    // 点击地图
    maptap(e) {
      this.storeShow = false
      this.$apply()
    }
  }
  // 查询是否有未付单
  async hasUnpaidOrder() {
    let user = wepy.getStorageSync(USER_SPECICAL_INFO)
    let res = await api.QueryOrdersList({
      query: {
        userId: user.userid,
        page: 1,
        count: 10,
        type: 3
      }
    })
    if (res.data.status === 200) {
      // res.data.data.total_page
      console.log(555)
      console.log(res.data.data.orders)
      res.data.data.orders.map(i => {
        if (i.pay_state === 2) {
          wepy.navigateTo({
            url: '/pages/order'
          })
          return false
        }
      })
    } else {
      tip.showModal('提示', res.data.data.errmsg)
    }
  }
  // 显示附近商店
  async nearbyStore() {
    let res = await api.NearbyStore({
      query: {
        lng: this.locationData.longitude,
        lat: this.locationData.latitude
      }
    })
    console.log(res)
    if (res.data.status === 200) {
      this.markers = []
      res.data.data.map(val => {
        let icon
        switch (val.type) {
          case 1:
            icon = '../images/baby.png'
            break
          case 2:
            icon = '../images/charger.png'
            break
          case 3:
            icon = '../images/chargerBaby.png'
            break
          default:
            icon = '../images/charger.png'
            break
        }
        this.markers.push({
          id: val.merchant_id,
          latitude: val.m_lat,
          longitude: val.m_lng,
          iconPath: icon,
          width: 34.87,
          height: 38
        })
      })
      console.log(this.markers)
      this.$apply()
    } else {
      tip.showModal('提示', res.data.data.errmsg)
    }
  }
  // 初始化地图
  async _mapInit() {
    let mapCtx = await wepy.createMapContext('myMap')
    store.dispatch({
      type: 'ASSIGNMENT_MAP_CTX',
      payload: mapCtx
    })
    this.mapCtx.moveToLocation()
    wx.getLocation({
      success: res => {
        // console.log(res)
        this.locationData.latitude = res.latitude
        this.locationData.longitude = res.longitude
        this.nearbyStore()
        this.$apply()
        // console.log(this.markers)
      },
      fail: res => {
        console.log(res)
      }
    })
  }
}
</script>

<style lang="less">
@import '../styles/mixin.less';
@header: 86rpx;
.container {
  .wh(100%, 100%);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  position: relative;
  .Map {
    .wh(100%, 100%);
    position: relative;
    map {
      .wh(100%, 100%);
      @header: 86rpx;
      .header {
        display: flex;
        .wh-l(100%, @header);
        background-color: #fff;
        position: absolute;
        left: 0;
        top: 0;
        z-index: 1;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);
        .left {
          flex-grow: 2;
          width: 0;
          display: flex;
          justify-content: center;
          align-items: center;
          position: relative;
          .avatar {
            .wh(60rpx, 60rpx);
            overflow: hidden;
            display: block;
            border-radius: 50%;
            position: relative;
            box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);
            cover-image {
              .wh(100%, 100%);
            }
          }
          .bar {
            .wh(3rpx, 46rpx);
            background: #d8d8d8;
            position: absolute;
            top: 50%;
            right: 0;
            margin-top: -23rpx;
          }
        }
        .center {
          flex-grow: 12;
          width: 0;
          font-size: 32rpx;
          padding-left: 5%;
          white-space: 5px;
          line-height: @header;
        }
        .right {
          flex-grow: 2;
          width: 0;
          display: flex;
          justify-content: center;
          align-items: center;
          position: relative;
          cover-image {
            .wh(47.03rpx, 34rpx);
          }
          .bar {
            .wh(3rpx, 46rpx);
            background: #d8d8d8;
            position: absolute;
            top: 50%;
            left: 0;
            margin-top: -23rpx;
          }
        }
      }
      .cover-img {
        .wh(35.42rpx, 80rpx);
        .f-center;
        margin-top: -34rpx;
      }
      .reporting{
        .wh(90rpx, 90rpx);
        position: absolute;
        left: 36rpx;
        bottom: 150rpx;
      }
      .location {
        .wh(100rpx, 100rpx);
        position: absolute;
        left: 32rpx;
        bottom: 36rpx;
      }
      .scanning {
        .wh(200rpx, 200rpx);
        position: absolute;
        left: 50%;
        bottom: 40rpx;
        transform: translateX(-50%);
      }
      .service {
        .wh(100rpx, 100rpx);
        position: absolute;
        right: 32rpx;
        bottom: 36rpx;
      }
      .service-mask {
        .fs;
        z-index: 999;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgba(0, 0, 0, 0.5);
        @alertHeight: 300rpx;
        .alert{
          .wh(500rpx, @alertHeight);
          background: #FFF;
          margin-top: -100rpx;
          border-radius: 14rpx;
          display: flex;
          flex-direction: column;
          font-size: 34rpx;
          .item{
            // .wh(100%, @alertHeight / 3)
            line-height: @alertHeight / 3;
            flex-grow: 1;
            padding-left: 30rpx;
            position: relative;
            .line {
              .wh(100%, 3rpx);
              background: #DEDEDE;
              position: absolute;
              left: 0;
              bottom: 0;
            }
          }
        }
      }
      .details{
        position: absolute;
        left: 50%;
        bottom: 30rpx;
        transform: translateX(-50%);
      }
    }
  }
}
</style>
